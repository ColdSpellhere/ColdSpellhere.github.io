{"singlePage": [], "startSite": "08/22/2025", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#0abab5", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark", "urlMode": "issue", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script>", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "\u672c\u535a\u5ba2\u4e00\u5207\u6587\u7ae0\u9075\u5b88 <a href=\"https://github.com/ColdSpellhere/ColdSpellhere.github.io/issues/2#issue-3343299585/\" target=\"_blank\" rel=\"noopener\" style=\"color: inherit;\">CC BY-NC-SA 4.0</a> \u534f\u8bae", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "ColdSpell's Blog", "subTitle": "Contact Email: coldspell060319@gmail.com<br>\u6b22\u8fce\u6765<a href='https://oopz.cn/i/alNZp4/' target='_blank' rel='noopener' style='color: inherit;'>\u6211\u7684OOPZ\u9891\u9053</a>\u804a\u804a\u5929", "avatarUrl": "https://avatars.githubusercontent.com/u/207527992?v=4", "GMEEK_VERSION": "last", "email": "coldspell060319@gmail.com", "postListJson": {"P1": {"htmlDir": "docs/post/1.html", "labels": ["documentation"], "postTitle": "This is a test page", "postUrl": "post/1.html", "postSourceUrl": "https://github.com/ColdSpellhere/ColdSpellhere.github.io/issues/1", "commentNum": 1, "wordCount": 16, "description": "into a new world\u3002", "top": 0, "createdAt": 1755809102, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/207527992?v=4", "createdDate": "2025-08-22", "dateLabelColor": "#0969da"}, "P2": {"htmlDir": "docs/post/2.html", "labels": ["Popular Science"], "postTitle": "\u4ec0\u4e48\u662fCC\u534f\u8bae\uff08\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\uff09", "postUrl": "post/2.html", "postSourceUrl": "https://github.com/ColdSpellhere/ColdSpellhere.github.io/issues/2", "commentNum": 2, "wordCount": 1087, "description": "### \u4ec0\u4e48\u662fCC\u534f\u8bae\uff1f\n\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\uff08Creative Commons license\uff09\uff0c\u53c8\u540dCC\u534f\u8bae\uff0c\u662f\u4e00\u79cd\u5141\u8bb8\u4ed6\u4eba\u5206\u53d1\u4f5c\u54c1\u7684\u516c\u5171\u7248\u6743\u8bb8\u53ef\u3002", "top": 0, "createdAt": 1755813094, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/207527992?v=4", "createdDate": "2025-08-22", "dateLabelColor": "#0969da"}, "P3": {"htmlDir": "docs/post/3.html", "labels": ["Study Notes"], "postTitle": "Numpy\u4e60\u9898\u7b14\u8bb0", "postUrl": "post/3.html", "postSourceUrl": "https://github.com/ColdSpellhere/ColdSpellhere.github.io/issues/3", "commentNum": 0, "wordCount": 4261, "description": "# 1.\u5f52\u4e00\u5316\uff0c\u6807\u51c6\u5316\n![Compare](https://i-blog.csdnimg.cn/blog_migrate/6aec0785b4affc9a049f8b7b796c9915.png)\n## \u5f52\u4e00\u5316\n```Python\nZ = np.random.random((5,5))\nprint(Z)\nprint('\\n')\nZ_scale = (Z - np.min(Z)) / np.ptp(Z)) \n#\u6700\u503c\u5f52\u4e00\u5316\uff08MinMaxScaler\uff09 (np.ptp(Z))=(np.max(Z) - np.min(Z)\nprint(Z_scale)\n\n```\n###### \u5f52\u4e00\u5316\u8fd0\u884c\u7ed3\u679c\u4f8b\n```\n[[0.46364375 0.78548223 0.72442223 0.68663041 0.68110256] [0.70568273 0.07519275 0.958697 0.2028082 0.41866144] [0.56644737 0.84278929 0.89113894 0.48064408 0.28365119] [0.48338433 0.58233878 0.59077714 0.4637845 0.5200544 ] [0.54851656 0.31392362 0.75729952 0.95367168 0.18563437]]\n\n[[0.46364375 0.78548223 0.72442223 0.68663041 0.68110256] [0.70568273 0.07519275 0.958697 0.2028082 0.41866144] [0.56644737 0.84278929 0.89113894 0.48064408 0.28365119] [0.48338433 0.58233878 0.59077714 0.4637845 0.5200544 ] [0.54851656 0.31392362 0.75729952 0.95367168 0.18563437]]\n```\n\n## \u6807\u51c6\u5316\n```Python\nZ = np.random.random((5,5))\nprint(Z)\nprint('\\n')\nZ = (Z - np.mean (Z)) / (np.std (Z))\nprint(Z)\n```\n###### \u6807\u51c6\u5316\u8fd0\u884c\u7ed3\u679c\u4f8b\n```\n[[0.73568395 0.04015236 0.48692444 0.37883354 0.93524418] [0.41309095 0.96252619 0.79763891 0.59653225 0.18358172] [0.86417374 0.71764583 0.80689974 0.74152617 0.79441388] [0.39287178 0.73110138 0.04942272 0.28836453 0.42616441] [0.92920924 0.38905728 0.38568728 0.82678806 0.97061093]]\n\n[[ 0.50864319 -1.98418417 -0.38292598 -0.7703303 1.22387913] [-0.64754967 1.32165952 0.73069352 0.00991505 -1.47012468] [ 0.96915839 0.44399346 0.76388488 0.52958206 0.71913483] [-0.7200164 0.49221897 -1.95095864 -1.09457672 -0.60069361] [ 1.20224957 -0.73368781 -0.74576609 0.83516582 1.3506357 ]]\n```\n\n## 2.\u8003\u8651\u4e00\u4e2a\u53ef\u4ee5\u63cf\u8ff010\u4e2a\u4e09\u89d2\u5f62\u7684triplets\uff0c\u627e\u5230\u53ef\u4ee5\u5206\u5272\u5168\u90e8\u4e09\u89d2\u5f62\u7684line segment\n![Triplets](https://i-blog.csdnimg.cn/blog_migrate/acff52c2510d4e635c72c3fa1ff4aaa7.png)\n\n## 3.\u622a\u53d6\u4e2d\u5fc3\u533a\u57df\n```Python\nimport numpy as np\n\ndef extract_centered_subarray(\n\n\u00a0 \u00a0 array: np.ndarray,\n\n\u00a0 \u00a0 shape: tuple,\n\n\u00a0 \u00a0 center: tuple,\n\n\u00a0 \u00a0 fill: float = 0,\n\n\u00a0 \u00a0 padding_mode: str = 'constant'\n\n) -> np.ndarray:\n\n\u00a0 \u00a0 # \u53c2\u6570\u6821\u9a8c\n\n\u00a0 \u00a0 if len(shape) != array.ndim:\n\n\u00a0 \u00a0 \u00a0 \u00a0 raise ValueError(f'shape\u7ef4\u5ea6 {len(shape)} \u5fc5\u987b\u4e0e\u8f93\u5165\u6570\u7ec4\u7ef4\u5ea6 {array.ndim} \u76f8\u540c')\n\n\u00a0 \u00a0 if len(center) != array.ndim:\n\n\u00a0 \u00a0 \u00a0 \u00a0 raise ValueError(f'center\u7ef4\u5ea6 {len(center)} \u5fc5\u987b\u4e0e\u8f93\u5165\u6570\u7ec4\u7ef4\u5ea6 {array.ndim} \u76f8\u540c')\n\n\u00a0 \u00a0 # \u8ba1\u7b97\u7406\u8bba\u8303\u56f4\n\n\u00a0 \u00a0 shape_arr = np.array(shape)\n\n\u00a0 \u00a0 center_arr = np.array(center)\n\n\u00a0 \u00a0 half_shape = shape_arr // 2\n\n\u00a0 \u00a0 start = center_arr - half_shape\n\n\u00a0 \u00a0 stop = center_arr + half_shape + (shape_arr % 2) \u00a0# \u5904\u7406\u5947\u6570\u5f62\u72b6\n\n\u00a0 \u00a0 # \u5904\u7406\u8fb9\u754c\n\n\u00a0 \u00a0 array_shape = np.array(array.shape)\n\n\u00a0 \u00a0 start_corrected = np.maximum(start, 0)\n\n\u00a0 \u00a0 stop_corrected = np.minimum(stop, array_shape)\n\n\u00a0 \u00a0 # \u8ba1\u7b97\u586b\u5145\u533a\u57df\n\n\u00a0 \u00a0 pad_before = np.maximum(-start, 0)\n\n\u00a0 \u00a0 pad_after = np.maximum(stop - array_shape, 0)\n\n\u00a0 \u00a0 padding = list(zip(pad_before, pad_after))\n\n\u00a0 \u00a0 # \u63d0\u53d6\u6709\u6548\u533a\u57df\n\n\u00a0 \u00a0 slices = tuple(slice(s, e) for s, e in zip(start_corrected, stop_corrected))\n\n\u00a0 \u00a0 valid_region = array[slices]\n\n\u00a0 \u00a0 # \u6839\u636e\u586b\u5145\u6a21\u5f0f\u5904\u7406\n\n\u00a0 \u00a0 if padding_mode == 'edge':\n\n\u00a0 \u00a0 \u00a0 \u00a0 # \u8fb9\u7f18\u503c\u586b\u5145\n\n\u00a0 \u00a0 \u00a0 \u00a0 pad_width = [(int(p[0]), int(p[1])) for p in padding]\n\n\u00a0 \u00a0 \u00a0 \u00a0 return np.pad(valid_region, pad_width, mode='edge')\n\n\u00a0 \u00a0 else:\n\n\u00a0 \u00a0 \u00a0 \u00a0 # \u56fa\u5b9a\u503c\u586b\u5145\n\n\u00a0 \u00a0 \u00a0 \u00a0 result = np.full(shape, fill, dtype=array.dtype)\n\n\u00a0 \u00a0 \u00a0 \u00a0 insert_slices = tuple(slice(p[0], p[0] + stop_corrected[i] - start_corrected[i]) for i, p in enumerate(padding))\n\n\u00a0 \u00a0 \u00a0 \u00a0 result[insert_slices] = valid_region\n\n\u00a0 \u00a0 \u00a0 \u00a0 return result\n\n# ------------------------- \u793a\u4f8b\u7528\u6cd5 -------------------------\nif __name__ == '__main__':\n    # \u793a\u4f8b1\uff1a2D\u6570\u7ec4\u4e2d\u5fc3\u63d0\u53d6\n    Z = np.arange(25).reshape(5,5)\n    print('\u539f\u59cb\u6570\u7ec4:\\n', Z)\n    print('\\n\u4e2d\u5fc3(1,1)\u76843x3\u5b50\u6570\u7ec4:\\n', extract_centered_subarray(Z, (3,3), (1,1)))\n\n    # \u793a\u4f8b2\uff1a\u8fb9\u754c\u586b\u5145\n    print('\\n\u4e2d\u5fc3(0,0)\u76843x3\u5b50\u6570\u7ec4\uff08\u81ea\u52a8\u586b\u5145\uff09:\\n', \n          extract_centered_subarray(Z, (3,3), (0,0), fill=-1))\n\n    # \u793a\u4f8b3\uff1a\u8fb9\u7f18\u503c\u586b\u5145\u6a21\u5f0f\n    print('\\n\u8fb9\u7f18\u586b\u5145\u6a21\u5f0f:\\n', \n          extract_centered_subarray(Z, (3,3), (0,0), padding_mode='edge'))\n```\n###### \u4ece\u6570\u7ec4\u4e2d\u63d0\u53d6\u4ee5\u6307\u5b9a\u4f4d\u7f6e\u4e3a\u4e2d\u5fc3\u7684\u56fa\u5b9a\u5f62\u72b6\u5b50\u6570\u7ec4\uff0c\u81ea\u52a8\u5904\u7406\u8fb9\u754c\u586b\u5145\u3002", "top": 0, "createdAt": 1755986268, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/207527992?v=4", "createdDate": "2025-08-24", "dateLabelColor": "#0969da"}, "P4": {"htmlDir": "docs/post/4.html", "labels": ["Study Notes"], "postTitle": "DataScience Glossary Flowchart", "postUrl": "post/4.html", "postSourceUrl": "https://github.com/ColdSpellhere/ColdSpellhere.github.io/issues/4", "commentNum": 0, "wordCount": 1107, "description": "##### Chinese Version\n```mermaid\nflowchart TD\n    A[\u6570\u636e\u6e90<br>\u4e1a\u52a1\u7cfb\u7edf\u3001IoT\u3001\u65e5\u5fd7\u7b49] -->|\u539f\u59cb\u6570\u636e\u6d41\u5165| B[\u6570\u636e\u6c60 Data Lake]\n\n    subgraph Governance [\u6570\u636e\u6cbb\u7406 Data Governance]\n        G[\u653f\u7b56/\u6807\u51c6/\u8d28\u91cf/\u5b89\u5168<br>\u8d2f\u7a7f\u5168\u6d41\u7a0b]\n    end\n\n    B -- \u6570\u636e\u7ba1\u9053 Data Pipeline --> C{\u6570\u636e\u96c6\u6210<br>Data Integration}\n    C -- \u62bd\u53d6\u3001\u6e05\u6d17\u3001\u8f6c\u6362<br>\uff08ETL/ELT\uff09 --> B\n    C -- \u7ec4\u7ec7\u3001\u52a0\u5de5 --> D[\u6570\u636e\u96c6\u5e02 Data Mart]\n\n    D --> E[\u6700\u7ec8\u7528\u6237<br>BI\u3001\u5206\u6790\u3001\u5e94\u7528]\n    B --> F[\u6570\u636e\u79d1\u5b66\u5bb6<br>\u63a2\u7d22\u6027\u5206\u6790]\n\n    G -.->|\u76d1\u7ba1\u4e0e\u89c4\u8303| A\n    G -.->|\u76d1\u7ba1\u4e0e\u89c4\u8303| B\n    G -.->|\u76d1\u7ba1\u4e0e\u89c4\u8303| C\n    G -.->|\u76d1\u7ba1\u4e0e\u89c4\u8303| D\n```\n##### English Version\n```mermaid\nflowchart TD\n    A[Data Sources<br>Business Apps, IoT, Logs] -->|Raw Data Ingest| B[Data Lake]\n\n    subgraph Governance [Data Governance<br>Policies/Standards/Quality/Security]\n        G[Governs Entire Process]\n    end\n\n    B -- Data Pipeline --> C{Data Integration}\n    C -- Extract, Clean, Transform<br>\uff08ETL/ELT\uff09 --> B\n    C -- Organize, Process --> D[Data Mart]\n\n    D --> E[End Users<br>BI, Analytics, Apps]\n    B --> F[Data Scientists<br>Exploratory Analysis]\n\n    G -.->|Governs & Standards| A\n    G -.->|Governs & Standards| B\n    G -.->|Governs & Standards| C\n    G -.->|Governs & Standards| D\n```\u3002", "top": 0, "createdAt": 1757054168, "style": "", "script": "<script src='https://blog.meekdai.com/Gmeek/plugins/GmeekTOC.js'></script><script src='https://blog.meekdai.com/Gmeek/plugins/lightbox.js'></script>", "head": "", "ogImage": "https://avatars.githubusercontent.com/u/207527992?v=4", "createdDate": "2025-09-05", "dateLabelColor": "#0969da"}}, "singeListJson": {}, "labelColorDict": {"bug": "#d73a4a", "documentation": "#0075ca", "duplicate": "#cfd3d7", "enhancement": "#a2eeef", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "Popular Science": "#38a1ba", "question": "#d876e3", "Study Notes": "#25f1b0", "wontfix": "#ffffff"}, "displayTitle": "ColdSpell's Blog", "faviconUrl": "https://avatars.githubusercontent.com/u/207527992?v=4", "ogImage": "https://avatars.githubusercontent.com/u/207527992?v=4", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://ColdSpellhere.github.io", "prevUrl": "disabled", "nextUrl": "disabled"}